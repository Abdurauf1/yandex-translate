{"version":3,"sources":["components/input/style.js","components/input/index.jsx","components/navbar/style.js","components/navbar/index.jsx","components/translateCol/style.js","components/translateCol/index.jsx","pages/style.js","pages/index.jsx","App.js","index.js"],"names":["InputBox","styled","div","TrFromToBox","Select","select","Textarea","textarea","Input","getTranslatedWords","useState","inputText","setInputText","langsText","langs","number","lang","langToStr","split","chosenLang","setChosenLang","value","onChange","e","target","map","rows","placeholder","join","console","log","Nav","nav","Navbar","TranslateColWrapper","TranslateWordBox","p","TranslateWord","span","TranslateWordPronunciation","Pos","small","Gen","TranslatedWord","Number","Tr","Syn","Mean","Example","Comma","MinusSign","TranslateCol","translated","def","text","pos","ts","tr","trIndex","gen","syn","mean","ex","length","synIndex","meanIndex","Container","Col","MainPage","useEffect","setTranslated","axios","get","then","data","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22193da2.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const InputBox = styled.div`\r\n    width: 100%;\r\n    border: 1px solid lightgrey;\r\n    padding: 15px;\r\n    &:focus-within {\r\n        outline: 1px auto var(--yellow);\r\n    }\r\n`;\r\n\r\nexport const TrFromToBox = styled.div`\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    svg {\r\n        width: 15px;\r\n        margin: 0 10px;\r\n    }\r\n`;\r\nexport const Select = styled.select`\r\n    padding: 5px;\r\n    &:focus{\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n    width: 100%;\r\n    min-height: 40px;\r\n    border: 0;\r\n    resize: none;\r\n    font-size: 20px;\r\n\r\n    &::placeholder{\r\n        font-size: 20px;\r\n    }\r\n    &:focus{\r\n        outline: 0;\r\n    }\r\n    @media only screen and (max-width: 768px){\r\n        font-size: 18px;\r\n        &::placeholder{\r\n            font-size: 18px;\r\n        }\r\n\r\n    @media only screen and (max-width: 425px){\r\n        font-size: 15px;\r\n        &::placeholder{\r\n            font-size: 15px;\r\n        }\r\n}\r\n`;","import React, { useState } from 'react'\r\nimport { InputBox, Textarea, TrFromToBox, Select } from \"./style.js\"\r\n\r\nfunction Input({ getTranslatedWords }) {\r\n\r\n    const [inputText, setInputText] = useState('')\r\n\r\n    const langs = [\r\n        \"ru-en\", \"ru-pl\", \"ru-uk\",\r\n        \"ru-de\", \"ru-fr\", \"ru-es\", \"ru-it\",\r\n        \"ru-tr\", \"en-ru\", \"en-de\",\r\n        \"en-fr\", \"en-es\", \"en-it\", \"en-tr\",\r\n        \"pl-ru\", \"uk-ru\", \"de-ru\", \"de-en\",\r\n        \"fr-ru\", \"fr-en\", \"es-ru\", \"es-en\",\r\n        \"it-ru\", \"it-en\", \"tr-ru\", \"tr-en\"\r\n    ]\r\n\r\n    const langToStr = (lang) => {\r\n        switch (lang) {\r\n            case \"ru\":\r\n                return \"Russian\"\r\n            case \"en\":\r\n                return \"English\"\r\n            case \"pl\":\r\n                return \"Polandish\"\r\n            case \"uk\":\r\n                return \"Ukrainian\"\r\n            case \"de\":\r\n                return \"German\"\r\n            case \"fr\":\r\n                return \"French\"\r\n            case \"es\":\r\n                return \"Spanish\"\r\n            case \"it\":\r\n                return \"Italian\"\r\n            case \"tr\":\r\n                return \"Turkish\"\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const langsText = (langs, number) => {\r\n        const lang = langs.split(\"-\")\r\n        return langToStr(lang[number])\r\n    }\r\n\r\n    const [chosenLang, setChosenLang] = useState(\"en-ru\")\r\n\r\n    return (\r\n        <>\r\n            <InputBox>\r\n                <TrFromToBox>\r\n                    <Select value={chosenLang} onChange={(e) => setChosenLang(e.target.value)}>\r\n                        {\r\n                            langs.map(\r\n                                (lang) => <option\r\n                                    value={lang}>{langsText(lang, 0)} &#10142; {langsText(lang, 1)}</option>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                </TrFromToBox>\r\n                <Textarea rows={4}\r\n                    placeholder={\"Start typing or insert a link\"}\r\n                    value={inputText}\r\n                    onChange={(e) => {\r\n                        getTranslatedWords(chosenLang, e.target.value.split(\" \").join(\"+\"))\r\n                        setInputText(e.target.value)\r\n                        console.log(e.target.value.split(\" \").join(\"+\"));\r\n                    }}\r\n                />\r\n            </InputBox>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n    background-color: transparent;\r\n    width: 100%;\r\n    height: fit-content;\r\n    p {\r\n        color: #002033;\r\n        font-size: 50px;\r\n        font-weight: bold;\r\n        margin: 0 0 0 40px;\r\n        span {\r\n            color: #FC3F1D;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport { Nav } from './style'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <Nav>\r\n            <p><span>Y</span>andex Translate</p>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import styled from \"styled-components\"\r\n\r\nexport const TranslateColWrapper = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nexport const TranslateWordBox = styled.p`\r\n    //display: flex;\r\n`;\r\n\r\nexport const TranslateWord = styled.span`\r\n    font-weight:bold;\r\n`;\r\n\r\nexport const TranslateWordPronunciation = styled.span`\r\n    margin: 0 5px;\r\n    color: darkgrey;\r\n`;\r\n\r\nexport const Pos = styled.small`\r\n    color: grey;\r\n`;\r\n\r\nexport const Gen = styled.small`\r\n    color: grey;\r\n    margin-left: 5px;\r\n`;\r\n\r\nexport const TranslatedWord = styled.p`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 25px;\r\n    position: relative;\r\n`;\r\n\r\nexport const Number = styled.p`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    color: darkgrey;\r\n`;\r\n\r\n\r\nexport const Tr = styled.p`\r\n    margin-right: 5px;\r\n    color: #4b4b99;\r\n`;\r\n\r\nexport const Syn = styled.p`\r\n    margin-right: 5px;\r\n    color: #4b4b99;\r\n\r\n`;\r\n\r\n\r\nexport const Mean = styled.p`\r\n    color: #80494b;\r\n    //margin:5px 0 5px 25px;\r\n    margin-left: 25px;\r\n`;\r\n\r\nexport const Example = styled.p`\r\n    color: grey;\r\n    margin-left: 40px;\r\n`;\r\n\r\nexport const Comma = styled.span`\r\n    color: black;\r\n`;\r\n\r\nexport const MinusSign = styled.span`\r\n    margin: 0 5px;\r\n`;\r\n","import React from 'react'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport {\r\n    Comma,\r\n    Example, Gen,\r\n    Mean, MinusSign, Number,\r\n    Pos, Syn, Tr,\r\n    TranslateColWrapper,\r\n    TranslatedWord,\r\n    TranslateWord,\r\n    TranslateWordBox,\r\n    TranslateWordPronunciation\r\n} from \"./style\";\r\n\r\nfunction TranslateCol({ translated }) {\r\n    return (\r\n        <TranslateColWrapper>\r\n            {\r\n                translated?.def?.map(({ text, pos, ts, tr }) =>\r\n                    <>\r\n                        <TranslateWordBox>\r\n                            <TranslateWord>\r\n                                {text}\r\n                            </TranslateWord>\r\n                            <TranslateWordPronunciation>\r\n                                [{ts}]\r\n                            </TranslateWordPronunciation>\r\n                            <Pos>\r\n                                {pos}\r\n                            </Pos>\r\n                        </TranslateWordBox>\r\n                        {\r\n                            tr?.map(({ text, pos, gen, syn, mean, ex }, trIndex) =>\r\n                                <>\r\n                                    <TranslatedWord>\r\n                                        {\r\n                                            tr.length > 1 &&\r\n                                            <Number>\r\n                                                {trIndex + 1}\r\n                                            </Number>\r\n                                        }\r\n                                        <Tr>\r\n                                            {text}\r\n                                            {gen &&\r\n                                                <Gen>\r\n                                                    {gen}\r\n                                                </Gen>}\r\n                                            <Comma>\r\n                                                {syn ? \".\" : \"\"}\r\n                                            </Comma>\r\n                                        </Tr>\r\n                                        {syn?.map(({ text, pos, gen }, synIndex) =>\r\n                                            <Syn>\r\n                                                {text}\r\n                                                {gen &&\r\n                                                    <Gen>\r\n                                                        {gen}\r\n                                                    </Gen>}\r\n                                                <Comma>\r\n                                                    {syn.length - 1 !== synIndex ? \",\" : ''}\r\n                                                </Comma>\r\n                                            </Syn>\r\n                                        )}\r\n                                    </TranslatedWord>\r\n                                    {mean &&\r\n                                        <Mean>\r\n                                            ({mean.map(({ text }, meanIndex) => <span>{text}{mean.length - 1 !== meanIndex && \" \"}</span>)})\r\n                                        </Mean>\r\n                                    }\r\n                                    {ex &&\r\n                                        <Example>\r\n                                            {ex.map(({ text, tr }) =>\r\n                                                <p>\r\n                                                    {text}\r\n                                                    <MinusSign>-</MinusSign>\r\n                                                    {tr && tr.map(({ text }) => <span>{text}</span>)}\r\n                                                </p>\r\n                                            )}\r\n                                        </Example>\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n        </TranslateColWrapper>\r\n    )\r\n}\r\n\r\nexport default TranslateCol\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n    width: 1140px;\r\n    margin: auto;\r\n    padding: 50px 0;\r\n    display:flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n@media only screen and (max-width: 1200px){\r\n    width: 90%;\r\n}\r\n\r\n@media only screen and (max-width: 942px){\r\n    padding: 35px 0;\r\n    width: 95%;\r\n}\r\n\r\n@media only screen and (max-width: 425px){\r\n    width: 100%;\r\n    padding: 20px 0;\r\n}\r\n\r\n`;\r\n\r\nexport const Col = styled.div`\r\n    width: 50%;\r\n    padding: 0 20px;\r\n\r\n@media only screen and (max-width:768px){\r\n    width: 100%;\r\n}\r\n`;","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Input from '../components/input'\r\nimport Navbar from \"../components/navbar/index\"\r\nimport TranslateCol from '../components/translateCol';\r\nimport { Col, Container } from \"./style\";\r\n\r\nfunction MainPage() {\r\n\r\n    useEffect(\r\n        () => getTranslatedWords('')\r\n    )\r\n\r\n    const key = \"dict.1.1.20201201T163137Z.5c6593134cc1fcb4.7ea53295a0777094051036688cd986b837fc9391\";\r\n\r\n    const [translated, setTranslated] = useState()\r\n\r\n    const getTranslatedWords = (lang, text) => {\r\n        axios\r\n            .get(\"https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=\" + key + \"&lang=\" + lang + \"&text=\" + text)\r\n            .then((value) => {\r\n                console.log(value);\r\n                setTranslated(value.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Container>\r\n                <Col>\r\n                    <Input getTranslatedWords={getTranslatedWords} />\r\n                </Col>\r\n                <Col>\r\n                    <TranslateCol translated={translated} />\r\n                </Col>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage","import './App.css';\nimport MainPage from './pages';\n\nfunction App() {\n  return (\n    <div>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}